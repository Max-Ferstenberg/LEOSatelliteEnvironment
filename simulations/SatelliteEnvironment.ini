[General]
network = leosatelliteenvironment.SatelliteNetwork

# Use Global ARP to resolve addresses without ARP packets
*.*.ipv4.arp.typename = "GlobalArp"

# TCP and UDP app settings for UserTerminal
*.userTerminal.numApps = 2
*.userTerminal.app[0].typename = "TcpClientApp"
*.userTerminal.app[0].io.connectAddress = "satellite"
*.userTerminal.app[0].io.connectPort = 8080
*.userTerminal.app[0].source.productionInterval = uniform(0.5s, 1s)
*.userTerminal.app[0].source.packetLength = intuniform(100B, 500B)

*.userTerminal.app[1].typename = "UdpApp"
*.userTerminal.app[1].io.localPort = 1000
*.userTerminal.app[1].io.destAddress = "satellite"
*.userTerminal.app[1].io.destPort = 1000
*.userTerminal.app[1].source.productionInterval = uniform(0.5s, 1s)
*.userTerminal.app[1].source.packetLength = intuniform(100B, 500B)

# TCP and UDP app settings for Satellite
*.satellite.numApps = 3
*.satellite.app[0].typename = "TcpServerApp"
*.satellite.app[0].listener.localPort = 8080

*.satellite.app[1].typename = "UdpRequestResponseApp"
*.satellite.app[1].io.localPort = 1000
*.satellite.app[1].io.destAddress = "groundStation"
*.satellite.app[1].io.destPort = 1000
*.satellite.app[1].sink.tokenGenerator[0].numTokensPerPacket = intuniform(10, 20)
*.satellite.app[1].sink.tokenGenerator[1].numTokensPerPacket = intuniform(5, 10)
*.satellite.app[1].source.provider[0].packetLength = intuniform(100B, 1000B)
*.satellite.app[1].source.provider[0].providingInterval = uniform(0s, 0.2s)

*.satellite.app[2].typename = "TcpClientApp"
*.satellite.app[2].io.connectAddress = "groundStation"
*.satellite.app[2].io.connectPort = 8000
*.satellite.app[2].source.productionInterval = uniform(0.5s, 1s)
*.satellite.app[2].source.packetLength = intuniform(100B, 500B)

# TCP and UDP app settings for GroundStation
*.groundStation.numApps = 2
*.groundStation.app[0].typename = "TcpServerApp"
*.groundStation.app[0].listener.localPort = 8000

*.groundStation.app[1].typename = "UdpRequestResponseApp"
*.groundStation.app[1].io.localPort = 1000
*.groundStation.app[1].io.destAddress = "satellite"
*.groundStation.app[1].io.destPort = 1000
*.groundStation.app[1].sink.tokenGenerator[0].numTokensPerPacket = intuniform(10, 20)
*.groundStation.app[1].sink.tokenGenerator[1].numTokensPerPacket = intuniform(5, 10)
*.groundStation.app[1].source.provider[0].packetLength = intuniform(100B, 1000B)
*.groundStation.app[1].source.provider[0].providingInterval = uniform(0s, 0.2s)

# Antenna settings for all devices

**.userTerminal[*].radio.antenna.typename = "ParabolicAntenna"
**.wlan[*].radio.antenna.beamWidth = 25deg
**.wlan[*].radio.antenna.maxGain = 10dB
**.wlan[*].radio.antenna.minGain = -50dB
**.wlan[*].radio.transmitter.power = 25mW
*.userTerminal.wlan[0].radio.antenna.orientation = "30deg 60deg 0deg"


# Interface configurations
**.wlan[*].typename = "Ieee80211Interface"
**.wlan[*].dataRate = 10Mbps

# Visualization settings
*.visualizer.*.radioVisualizer.displayRadios = true
*.visualizer.*.radioVisualizer.displayAntennaLobes = true
*.visualizer.*.dataLinkVisualizer.displayLinks = true

**.radioVisualizer.antennaLobeLogarithmicScale = 37.5
**.radioVisualizer.antennaLobeRadius = 100
**.radioVisualizer.antennaLobeStep = 1deg

# Radio medium settings
*.radioMedium.typename = "Ieee80211ScalarRadioMedium"

# Debugging settings
**.debug = true
**.wlan[*].radio.transmitter.debug = true
**.wlan[*].radio.receiver.debug = true
