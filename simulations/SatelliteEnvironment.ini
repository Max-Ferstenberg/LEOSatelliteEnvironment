[General]
network = leosatelliteenvironment.SatelliteNetwork

*.*.ipv4.arp.typename = "GlobalArp"

*.satellite1.typename = "SatelliteNode"
*.satellite2.typename = "SatelliteNode"
*.userTerminal.typename = "UserTerminal"
*.groundStation.typename = "GroundStation"

# Routing Tables
**.routingTable.debug = true
*.configurator.optimizeRoutes = false 

# Config wireless interfaces for LISL
*.satellite2.wlan[0].typename = "Ieee80211Interface"
*.satellite1.wlan[0].typename = "Ieee80211Interface"

# Antenna settings
*.userTerminal.wlan[0].radio.antenna.typename = "CosineAntenna"
*.userTerminal.wlan[0].radio.antenna.beamWidth = 30deg
*.userTerminal.wlan[0].radio.antenna.maxGain = 10dB
*.userTerminal.wlan[0].radio.antenna.minGain = -10dB
*.userTerminal.wlan[0].radio.maxTransmissionPower = 25W

*.groundStation.wlan[0].radio.antenna.typename = "CosineAntenna"
*.groundStation.wlan[0].radio.antenna.beamWidth = 25deg
*.groundStation.wlan[0].radio.antenna.maxGain = 10dB
*.groundStation.wlan[0].radio.antenna.minGain = -10dB
*.groundStation.wlan[0].radio.transmitter.power = 25mW

# Interface configurations
**.wlan[*].typename = "Ieee80211Interface"
**.wlan[*].dataRate = 10Mbps

# Visualization settings for radio connections
*.visualizer.*.radioVisualizer.displayRadios = true
*.visualizer.*.radioVisualizer.dislayAntennaLobes = true
*.visualizer.*.dataLinkVisualizer.displayLinks = true
*.visualizer.*.transportConnectionVisualizer.displayConnections = true

# Radio medium settings
*.radioMedium.typename = "Ieee80211ScalarRadioMedium"

*.radioMedium.mediumLimitCache.maxTransmissionPower = 50 W
*.radioMedium.mediumLimitCache.maxCommunicationRange = 175 m

# Debugging settings
**.debug = true
**.wlan[*].radio.transmitter.debug = true
**.wlan[*].radio.receiver.debug = true

**.constraintAreaMinX = 0m
**.constraintAreaMinY = 0m
**.constraintAreaMinZ = 0m
**.constraintAreaMaxX = 1000m
**.constraintAreaMaxY = 600m
**.constraintAreaMaxZ = 0m

**.updateInterval = 0.1s

#Mobility settings
*.satellite1.mobility.typename = "CircleMobility"
*.satellite1.mobility.cx = 600m
*.satellite1.mobility.cy = 300m  
*.satellite1.mobility.r = 150m   
*.satellite1.mobility.startAngle = 0deg 
*.satellite1.mobility.speed = 40mps 
*.satellite2.mobility.typename = "CircleMobility"
*.satellite2.mobility.cx = 600m  
*.satellite2.mobility.cy = 300m
*.satellite2.mobility.r = 150m   
*.satellite2.mobility.startAngle = 180deg  
*.satellite2.mobility.speed = 40mps



#--------------------------------------------------------------------------------


# TCP/UDP app settings for UserTerminal
*.userTerminal.numApps = 2
*.userTerminal.app[0].typename = "TcpClientApp"
*.userTerminal.app[0].io.connectAddress = "192.168.1.2"  # Satellite IP
*.userTerminal.app[0].io.connectPort = 8080
*.userTerminal.app[0].source.productionInterval = uniform(0.5s, 1s)
*.userTerminal.app[0].source.packetLength = intuniform(100B, 500B)

*.userTerminal.app[1].typename = "UdpApp"
*.userTerminal.app[1].io.localPort = 1000
*.userTerminal.app[1].io.destAddress = "192.168.1.2"  # Satellite IP
*.userTerminal.app[1].io.destPort = 1000
*.userTerminal.app[1].source.productionInterval = uniform(0.5s, 1s)
*.userTerminal.app[1].source.packetLength = intuniform(100B, 500B)

# TCP/UDP settings for Satellite
*.satellite*.numApps = 3
*.satellite*.app[0].typename = "TcpServerApp"
*.satellite*.app[0].listener.localPort = 8080

*.satellite*.app[1].typename = "UdpRequestResponseApp"
*.satellite*.app[1].io.localPort = 1000
*.satellite*.app[1].io.destAddress = "192.168.1.3" 
*.satellite*.app[1].io.destPort = 1000
*.satellite*.app[1].sink.tokenGenerator[0].numTokensPerPacket = intuniform(10, 20)
*.satellite*.app[1].sink.tokenGenerator[1].numTokensPerPacket = intuniform(5, 10)
*.satellite*.app[1].source.provider[0].packetLength = intuniform(100B, 1000B)
*.satellite*.app[1].source.provider[0].providingInterval = uniform(0s, 0.2s)

*.satellite*.app[2].typename = "TcpClientApp"
*.satellite*.app[2].io.connectAddress = "192.168.1.3" 
*.satellite*.app[2].io.connectPort = 8000
*.satellite*.app[2].source.productionInterval = uniform(0.5s, 1s)
*.satellite*.app[2].source.packetLength = intuniform(100B, 500B)

# TCP/UDP settings for GroundStation
*.groundStation.numApps = 2
*.groundStation.app[0].typename = "TcpServerApp"
*.groundStation.app[0].listener.localPort = 8000

*.groundStation.app[1].typename = "UdpRequestResponseApp"
*.groundStation.app[1].io.localPort = 1000
*.groundStation.app[1].io.destAddress = "192.168.1.2"  # Satellite IP
*.groundStation.app[1].io.destPort = 1000
*.groundStation.app[1].sink.tokenGenerator[0].numTokensPerPacket = intuniform(10, 20)
*.groundStation.app[1].sink.tokenGenerator[1].numTokensPerPacket = intuniform(5, 10)
*.groundStation.app[1].source.provider[0].packetLength = intuniform(100B, 1000B)
*.groundStation.app[1].source.provider[0].providingInterval = uniform(0s, 0.2s)

# LISL
*.satellite1.numApps = 2
*.satellite1.app[0].typename = "TcpClientApp"
*.satellite1.app[0].io.connectAddress = "192.168.1.4"
*.satellite1.app[0].io.connectPort = 8080
*.satellite1.app[0].source.productionInterval = uniform(0s, 20s)
*.satellite1.app[0].source.packetLength = intuniform(100B, 200B)
*.satellite1.app[0].source.packetData = intuniform(0, 1)

*.satellite1.app[1].typename = "UdpApp"
*.satellite1.app[1].io.localPort = 1000
*.satellite1.app[1].io.destAddress = "192.168.1.4"
*.satellite1.app[1].io.destPort = 1000
*.satellite1.app[1].source.productionInterval = 1s
*.satellite1.app[1].source.packetLength = intuniform(100B, 200B)
*.satellite1.app[1].source.packetData = intuniform(0, 1)

*.satellite2.numApps = 2
*.satellite2.app[0].typename = "TcpServerApp"
*.satellite2.app[0].listener.localPort = 8080

*.satellite2.app[1].typename = "UdpRequestResponseApp"
*.satellite2.app[1].io.localPort = 1000
*.satellite2.app[1].io.destAddress = "192.168.1.2"
*.satellite2.app[1].io.destPort = 1000
*.satellite2.app[1].sink.tokenGenerator[0].numTokensPerPacket = intuniform(10, 20)
*.satellite2.app[1].sink.tokenGenerator[1].numTokensPerPacket = intuniform(5, 10)
*.satellite2.app[1].source.provider[0].packetLength = intuniform(100B, 1000B)
*.satellite2.app[1].source.provider[0].providingInterval = uniform(0s, 0.2s)